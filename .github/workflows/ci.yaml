name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: 1.18
    - run: make test

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v2
      with:
        go-version: 1.18
    - uses: actions/checkout@v2
    - uses: golangci/golangci-lint-action@v3
      with:
        version: v1.49.0

  release:
    name: "Release artifacts on github"
    if: github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/')
    needs: [test, lint]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: git fetch --prune --unshallow
    - name: Set VERSION env
      run: echo "VERSION=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV
    - name: generate manifest.json
      env:
        VERSION: ${{ env.VERSION }}
      run: |
        cat >manifest.json <<EOF
        {
          "SchemaVersion": "1.0",
          "Metadata": {
            "Name": "acl",
            "Version": "${VERSION}"
          },
          "URLPerPlatform": {
            "darwin/arm64":  "https://github.com/tsuru/acl-plugin/releases/download/v${VERSION}/acl_${VERSION}_Darwin_arm64.tar.gz",
            "darwin/amd64":  "https://github.com/tsuru/acl-plugin/releases/download/v${VERSION}/acl_${VERSION}_Darwin_x86_64.tar.gz",
            "linux/arm64":   "https://github.com/tsuru/acl-plugin/releases/download/v${VERSION}/acl_${VERSION}_Linux_arm64.tar.gz",
            "linux/386":     "https://github.com/tsuru/acl-plugin/releases/download/v${VERSION}/acl_${VERSION}_Linux_i386.tar.gz",
            "linux/amd64":   "https://github.com/tsuru/acl-plugin/releases/download/v${VERSION}/acl_${VERSION}_Linux_x86_64.tar.gz",
            "windows/386":   "https://github.com/tsuru/acl-plugin/releases/download/v${VERSION}/acl_${VERSION}_Windows_i386.zip",
            "windows/amd64": "https://github.com/tsuru/acl-plugin/releases/download/v${VERSION}/acl_${VERSION}_Windows_x86_64.zip"
          }
        }
        EOF
    - uses: actions/setup-go@v2
      with:
        go-version: 1.18
    - uses: goreleaser/goreleaser-action@v6
      with:
        version: latest
        args: release --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
